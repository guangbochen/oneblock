---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    {}
  name: mlservices.ml.oneblock.ai
spec:
  group: ml.oneblock.ai
  names:
    kind: MLService
    listKind: MLServiceList
    plural: mlservices
    singular: mlservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .status.rayServiceStatuses.serviceStatus
      name: ServiceStatus
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: MLService is the Schema for the LLM application service
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              hfSecretRef:
                description: optional
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                  secretKey:
                    type: string
                required:
                - name
                - namespace
                type: object
              mlClusterRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                  rayClusterSpec:
                    properties:
                      image:
                        type: string
                      workerGroupSpec:
                        items:
                          properties:
                            acceleratorTypes:
                              additionalProperties:
                                type: integer
                              type: object
                            maxReplicas:
                              default: 5
                              description: MaxReplicas denotes the maximum number
                                of desired Pods for this worker group, and the default
                                value is maxInt32.
                              format: int32
                              type: integer
                            minReplicas:
                              default: 1
                              description: MinReplicas denotes the minimum number
                                of desired Pods for this worker group.
                              format: int32
                              type: integer
                            name:
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              type: object
                            rayStartParams:
                              additionalProperties:
                                type: string
                              description: 'RayStartParams are the params of the start
                                command: address, object-store-memory, ...'
                              type: object
                            replicas:
                              default: 1
                              description: Replicas is the number of desired Pods
                                for this worker group. See https://github.com/ray-project/kuberay/pull/1443
                                for more details about the reason for making this
                                field optional.
                              format: int32
                              type: integer
                            resources:
                              description: Template is a pod template for the worker
                                Template corev1.PodTemplateSpec `json:"template"`
                              properties:
                                claims:
                                  description: "Claims lists the names of resources,
                                    defined in spec.resourceClaims, that are used
                                    by this container. \n This is an alpha field and
                                    requires enabling the DynamicResourceAllocation
                                    feature gate. \n This field is immutable. It can
                                    only be set for containers."
                                  items:
                                    description: ResourceClaim references one entry
                                      in PodSpec.ResourceClaims.
                                    properties:
                                      name:
                                        description: Name must match the name of one
                                          entry in pod.spec.resourceClaims of the
                                          Pod where this field is used. It makes that
                                          resource available inside a container.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. Requests cannot
                                    exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            runtimeClassName:
                              type: string
                            tolerations:
                              description: If specified, the pod's tolerations.
                              items:
                                description: The pod this Toleration is attached to
                                  tolerates any taint that matches the triple <key,value,effect>
                                  using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: Effect indicates the taint effect
                                      to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule,
                                      PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: Key is the taint key that the toleration
                                      applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists;
                                      this combination means to match all values and
                                      all keys.
                                    type: string
                                  operator:
                                    description: Operator represents a key's relationship
                                      to the value. Valid operators are Exists and
                                      Equal. Defaults to Equal. Exists is equivalent
                                      to wildcard for value, so that a pod can tolerate
                                      all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: TolerationSeconds represents the
                                      period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is
                                      ignored) tolerates the taint. By default, it
                                      is not set, which means tolerate the taint forever
                                      (do not evict). Zero and negative values will
                                      be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: Value is the taint value the toleration
                                      matches to. If the operator is Exists, the value
                                      should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                            volume:
                              properties:
                                name:
                                  type: string
                                spec:
                                  description: PersistentVolumeClaimSpec describes
                                    the common attributes of storage devices and allows
                                    a Source for provider-specific attributes
                                  properties:
                                    accessModes:
                                      description: 'accessModes contains the desired
                                        access modes the volume should have. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                      items:
                                        type: string
                                      type: array
                                    dataSource:
                                      description: 'dataSource field can be used to
                                        specify either: * An existing VolumeSnapshot
                                        object (snapshot.storage.k8s.io/VolumeSnapshot)
                                        * An existing PVC (PersistentVolumeClaim)
                                        If the provisioner or an external controller
                                        can support the specified data source, it
                                        will create a new volume based on the contents
                                        of the specified data source. When the AnyVolumeDataSource
                                        feature gate is enabled, dataSource contents
                                        will be copied to dataSourceRef, and dataSourceRef
                                        contents will be copied to dataSource when
                                        dataSourceRef.namespace is not specified.
                                        If the namespace is specified, then dataSourceRef
                                        will not be copied to dataSource.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    dataSourceRef:
                                      description: 'dataSourceRef specifies the object
                                        from which to populate the volume with data,
                                        if a non-empty volume is desired. This may
                                        be any object from a non-empty API group (non
                                        core object) or a PersistentVolumeClaim object.
                                        When this field is specified, volume binding
                                        will only succeed if the type of the specified
                                        object matches some installed volume populator
                                        or dynamic provisioner. This field will replace
                                        the functionality of the dataSource field
                                        and as such if both fields are non-empty,
                                        they must have the same value. For backwards
                                        compatibility, when namespace isn''t specified
                                        in dataSourceRef, both fields (dataSource
                                        and dataSourceRef) will be set to the same
                                        value automatically if one of them is empty
                                        and the other is non-empty. When namespace
                                        is specified in dataSourceRef, dataSource
                                        isn''t set to the same value and must be empty.
                                        There are three important differences between
                                        dataSource and dataSourceRef: * While dataSource
                                        only allows two specific types of objects,
                                        dataSourceRef allows any non-core object,
                                        as well as PersistentVolumeClaim objects.
                                        * While dataSource ignores disallowed values
                                        (dropping them), dataSourceRef preserves all
                                        values, and generates an error if a disallowed
                                        value is specified. * While dataSource only
                                        allows local objects, dataSourceRef allows
                                        objects in any namespaces. (Beta) Using this
                                        field requires the AnyVolumeDataSource feature
                                        gate to be enabled. (Alpha) Using the namespace
                                        field of dataSourceRef requires the CrossNamespaceVolumeDataSource
                                        feature gate to be enabled.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                        namespace:
                                          description: Namespace is the namespace
                                            of resource being referenced Note that
                                            when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                                            object is required in the referent namespace
                                            to allow that namespace's owner to accept
                                            the reference. See the ReferenceGrant
                                            documentation for details. (Alpha) This
                                            field requires the CrossNamespaceVolumeDataSource
                                            feature gate to be enabled.
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    resources:
                                      description: 'resources represents the minimum
                                        resources the volume should have. If RecoverVolumeExpansionFailure
                                        feature is enabled users are allowed to specify
                                        resource requirements that are lower than
                                        previous value but must still be higher than
                                        capacity recorded in the status field of the
                                        claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                      properties:
                                        claims:
                                          description: "Claims lists the names of
                                            resources, defined in spec.resourceClaims,
                                            that are used by this container. \n This
                                            is an alpha field and requires enabling
                                            the DynamicResourceAllocation feature
                                            gate. \n This field is immutable. It can
                                            only be set for containers."
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: Name must match the name
                                                  of one entry in pod.spec.resourceClaims
                                                  of the Pod where this field is used.
                                                  It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    selector:
                                      description: selector is a label query over
                                        volumes to consider for binding.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    storageClassName:
                                      description: 'storageClassName is the name of
                                        the StorageClass required by the claim. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                      type: string
                                    volumeMode:
                                      description: volumeMode defines what type of
                                        volume is required by the claim. Value of
                                        Filesystem is implied when not included in
                                        claim spec.
                                      type: string
                                    volumeName:
                                      description: volumeName is the binding reference
                                        to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                              required:
                              - name
                              - spec
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                    required:
                    - image
                    type: object
                type: object
              modelTemplateVersionRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - mlClusterRef
            - modelTemplateVersionRef
            type: object
          status:
            properties:
              conditions:
                description: Conditions is an array of current conditions
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              rayServiceStatuses:
                description: RayServiceStatuses defines the observed state of RayService
                properties:
                  activeServiceStatus:
                    properties:
                      applicationStatuses:
                        additionalProperties:
                          properties:
                            healthLastUpdateTime:
                              description: Keep track of how long the service is healthy.
                                Update when Serve deployment is healthy or first time
                                convert to unhealthy from healthy.
                              format: date-time
                              type: string
                            message:
                              type: string
                            serveDeploymentStatuses:
                              additionalProperties:
                                description: ServeDeploymentStatus defines the current
                                  state of a Serve deployment
                                properties:
                                  healthLastUpdateTime:
                                    description: Keep track of how long the service
                                      is healthy. Update when Serve deployment is
                                      healthy or first time convert to unhealthy from
                                      healthy.
                                    format: date-time
                                    type: string
                                  message:
                                    type: string
                                  status:
                                    description: 'Name, Status, Message are from Ray
                                      Dashboard and represent a Serve deployment''s
                                      state. TODO: change status type to enum'
                                    type: string
                                type: object
                              type: object
                            status:
                              type: string
                          type: object
                        description: 'Important: Run "make" to regenerate code after
                          modifying this file'
                        type: object
                      dashboardStatus:
                        description: DashboardStatus defines the current states of
                          Ray Dashboard
                        properties:
                          healthLastUpdateTime:
                            description: Keep track of how long the dashboard is healthy.
                              Update when Dashboard is responsive or first time convert
                              to non-responsive from responsive.
                            format: date-time
                            type: string
                          isHealthy:
                            type: boolean
                        type: object
                      rayClusterName:
                        type: string
                      rayClusterStatus:
                        description: RayClusterStatus defines the observed state of
                          RayCluster
                        properties:
                          availableWorkerReplicas:
                            description: AvailableWorkerReplicas indicates how many
                              replicas are available in the cluster
                            format: int32
                            type: integer
                          desiredWorkerReplicas:
                            description: DesiredWorkerReplicas indicates overall desired
                              replicas claimed by the user at the cluster level.
                            format: int32
                            type: integer
                          endpoints:
                            additionalProperties:
                              type: string
                            description: Service Endpoints
                            type: object
                          head:
                            description: Head info
                            properties:
                              podIP:
                                type: string
                              serviceIP:
                                type: string
                            type: object
                          lastUpdateTime:
                            description: LastUpdateTime indicates last update timestamp
                              for this cluster status.
                            format: date-time
                            nullable: true
                            type: string
                          maxWorkerReplicas:
                            description: MaxWorkerReplicas indicates sum of maximum
                              replicas of each node group.
                            format: int32
                            type: integer
                          minWorkerReplicas:
                            description: MinWorkerReplicas indicates sum of minimum
                              replicas of each node group.
                            format: int32
                            type: integer
                          observedGeneration:
                            description: observedGeneration is the most recent generation
                              observed for this RayCluster. It corresponds to the
                              RayCluster's generation, which is updated on mutation
                              by the API Server.
                            format: int64
                            type: integer
                          reason:
                            description: Reason provides more information about current
                              State
                            type: string
                          state:
                            description: 'INSERT ADDITIONAL STATUS FIELD - define
                              observed state of cluster Important: Run "make" to regenerate
                              code after modifying this file Status reflects the status
                              of the cluster'
                            type: string
                        type: object
                    type: object
                  lastUpdateTime:
                    description: LastUpdateTime represents the timestamp when the
                      RayService status was last updated.
                    format: date-time
                    type: string
                  observedGeneration:
                    description: observedGeneration is the most recent generation
                      observed for this RayService. It corresponds to the RayService's
                      generation, which is updated on mutation by the API Server.
                    format: int64
                    type: integer
                  pendingServiceStatus:
                    description: Pending Service Status indicates a RayCluster will
                      be created or is being created.
                    properties:
                      applicationStatuses:
                        additionalProperties:
                          properties:
                            healthLastUpdateTime:
                              description: Keep track of how long the service is healthy.
                                Update when Serve deployment is healthy or first time
                                convert to unhealthy from healthy.
                              format: date-time
                              type: string
                            message:
                              type: string
                            serveDeploymentStatuses:
                              additionalProperties:
                                description: ServeDeploymentStatus defines the current
                                  state of a Serve deployment
                                properties:
                                  healthLastUpdateTime:
                                    description: Keep track of how long the service
                                      is healthy. Update when Serve deployment is
                                      healthy or first time convert to unhealthy from
                                      healthy.
                                    format: date-time
                                    type: string
                                  message:
                                    type: string
                                  status:
                                    description: 'Name, Status, Message are from Ray
                                      Dashboard and represent a Serve deployment''s
                                      state. TODO: change status type to enum'
                                    type: string
                                type: object
                              type: object
                            status:
                              type: string
                          type: object
                        description: 'Important: Run "make" to regenerate code after
                          modifying this file'
                        type: object
                      dashboardStatus:
                        description: DashboardStatus defines the current states of
                          Ray Dashboard
                        properties:
                          healthLastUpdateTime:
                            description: Keep track of how long the dashboard is healthy.
                              Update when Dashboard is responsive or first time convert
                              to non-responsive from responsive.
                            format: date-time
                            type: string
                          isHealthy:
                            type: boolean
                        type: object
                      rayClusterName:
                        type: string
                      rayClusterStatus:
                        description: RayClusterStatus defines the observed state of
                          RayCluster
                        properties:
                          availableWorkerReplicas:
                            description: AvailableWorkerReplicas indicates how many
                              replicas are available in the cluster
                            format: int32
                            type: integer
                          desiredWorkerReplicas:
                            description: DesiredWorkerReplicas indicates overall desired
                              replicas claimed by the user at the cluster level.
                            format: int32
                            type: integer
                          endpoints:
                            additionalProperties:
                              type: string
                            description: Service Endpoints
                            type: object
                          head:
                            description: Head info
                            properties:
                              podIP:
                                type: string
                              serviceIP:
                                type: string
                            type: object
                          lastUpdateTime:
                            description: LastUpdateTime indicates last update timestamp
                              for this cluster status.
                            format: date-time
                            nullable: true
                            type: string
                          maxWorkerReplicas:
                            description: MaxWorkerReplicas indicates sum of maximum
                              replicas of each node group.
                            format: int32
                            type: integer
                          minWorkerReplicas:
                            description: MinWorkerReplicas indicates sum of minimum
                              replicas of each node group.
                            format: int32
                            type: integer
                          observedGeneration:
                            description: observedGeneration is the most recent generation
                              observed for this RayCluster. It corresponds to the
                              RayCluster's generation, which is updated on mutation
                              by the API Server.
                            format: int64
                            type: integer
                          reason:
                            description: Reason provides more information about current
                              State
                            type: string
                          state:
                            description: 'INSERT ADDITIONAL STATUS FIELD - define
                              observed state of cluster Important: Run "make" to regenerate
                              code after modifying this file Status reflects the status
                              of the cluster'
                            type: string
                        type: object
                    type: object
                  serviceStatus:
                    description: ServiceStatus indicates the current RayService status.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
